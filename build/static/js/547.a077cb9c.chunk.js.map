{"version":3,"file":"static/js/547.a077cb9c.chunk.js","mappings":"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","sources":["components/Footer.jsx","pages/HomePage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 mt-auto py-6\">\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center text-gray-600 dark:text-gray-400\">\r\n              <div className=\"flex justify-center gap-x-6 mb-4\">\r\n        <Link to=\"/about\" className=\"text-sm text-gray-500 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white\">About</Link>\r\n        <Link to=\"/contact\" className=\"text-sm text-gray-500 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white\">Contact</Link>\r\n      </div>\r\n      <p>&copy; 2025 AlgoCore. All rights reserved.</p>\r\n    </div>\r\n  </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { FcGoogle } from 'react-icons/fc';\r\nimport Footer from '../components/Footer';\r\nimport LoadingPage from './LoadingPage';\r\nimport { ref, get, child } from 'firebase/database';\r\nimport { database } from '../firebase';\r\n\r\nfunction HomePage() {\r\n  const navigate = useNavigate();\r\n  const { googleSignIn, loading, user } = useAuth();\r\n  const [myCourses, setMyCourses] = useState([]);\r\n  const [progressLoading, setProgressLoading] = useState(false);\r\n\r\n  const languages = [\r\n    { name: 'JavaScript', icon: '⚡' },\r\n    { name: 'Python', icon: '🐍' },\r\n    { name: 'Java', icon: '☕' },\r\n    { name: 'C++', icon: '⚙️' },\r\n    { name: 'SQL', icon: '🗄️' },\r\n    { name: 'TypeScript', icon: '📘' },\r\n  ];\r\n\r\n  const handleGoogleSignIn = async () => {\r\n    try {\r\n      await googleSignIn();\r\n      // navigate('/profile'); // Redirect to profile after successful sign-in\r\n    } catch (error) {\r\n      console.error(\"Google Sign-In failed\", error);\r\n      // Optionally, show an error to the user\r\n    }\r\n  };\r\n\r\n  // Calculate course progress similar to CoursesPage\r\n  const calculateCourseProgress = (lessons, userProgress) => {\r\n    if (!lessons || typeof lessons !== 'object') return 0;\r\n    let total = 0;\r\n    let completed = 0;\r\n    Object.keys(lessons).forEach(topicKey => {\r\n      const topic = lessons[topicKey];\r\n      if (typeof topic !== 'object' || !topic?.description) return;\r\n      const questions = Array.isArray(topic.questions)\r\n        ? topic.questions\r\n        : (typeof topic.questions === 'object' ? Object.keys(topic.questions) : []);\r\n      total += questions.length;\r\n      const tProg = (userProgress && userProgress[topicKey]) || {};\r\n      questions.forEach(q => {\r\n        if (tProg && tProg[q] === true) completed += 1;\r\n      });\r\n    });\r\n    return total > 0 ? Math.round((completed / total) * 100) : 0;\r\n  };\r\n\r\n  // Fetch courses and user progress when signed in\r\n  useEffect(() => {\r\n    const fetchProgress = async () => {\r\n      if (!user) {\r\n        setMyCourses([]);\r\n        return;\r\n      }\r\n      try {\r\n        setProgressLoading(true);\r\n        const dbRef = ref(database);\r\n        const coursesSnap = await get(child(dbRef, 'Courses'));\r\n        if (!coursesSnap.exists()) {\r\n          setMyCourses([]);\r\n          setProgressLoading(false);\r\n          return;\r\n        }\r\n        const coursesList = coursesSnap.val();\r\n\r\n        if (!Array.isArray(coursesList)) {\r\n          setMyCourses([]);\r\n          setProgressLoading(false);\r\n          return;\r\n        }\r\n\r\n        const enriched = await Promise.all(\r\n          coursesList.map(async (c) => {\r\n            try {\r\n              const [lessonsSnap, progressSnap] = await Promise.all([\r\n                get(child(dbRef, `AlgoCore/${c.id}/lessons`)),\r\n                get(child(dbRef, `userprogress/${user.uid}/${c.id}`))\r\n              ]);\r\n              const lessons = lessonsSnap.exists() ? lessonsSnap.val() : {};\r\n              const uprog = progressSnap.exists() ? progressSnap.val() : {};\r\n              const percent = calculateCourseProgress(lessons, uprog);\r\n              return { id: c.id, title: c.title, percent };\r\n            } catch (e) {\r\n              console.error('Error computing progress for', c.id, e);\r\n              return { id: c.id, title: c.title, percent: 0 };\r\n            }\r\n          })\r\n        );\r\n\r\n        setMyCourses(enriched);\r\n      } catch (e) {\r\n        console.error('Error loading courses/progress on HomePage:', e);\r\n        setMyCourses([]);\r\n      } finally {\r\n        setProgressLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProgress();\r\n  }, [user]);\r\n\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col bg-white dark:bg-gray-900\">\r\n      {/* Grid Background */}\r\n      <div className=\"absolute top-0 left-0 w-full h-full bg-grid-pattern dark:bg-dark-grid-pattern bg-20\"></div>\r\n      {/* Animated Background Elements */}\r\n      <div className=\"absolute inset-0 overflow-hidden\">\r\n        <div className=\"absolute top-20 left-10 w-20 h-20 bg-blue-200 rounded-full opacity-20 animate-pulse\"></div>\r\n        <div className=\"absolute top-40 right-20 w-16 h-16 bg-purple-200 rounded-full opacity-30 animate-pulse\"></div>\r\n        <div className=\"absolute bottom-40 left-20 w-12 h-12 bg-green-200 rounded-full opacity-25 animate-pulse\"></div>\r\n        <div className=\"absolute bottom-60 right-40 w-24 h-24 bg-yellow-200 rounded-full opacity-20 animate-pulse\"></div>\r\n      </div>\r\n\r\n      <main className=\"relative flex-grow flex flex-col items-center justify-center z-10 pt-20\">\r\n        <div className=\"text-center px-4\">\r\n          <h1 className=\"text-5xl md:text-6xl font-bold text-gray-800 dark:text-white\">\r\n            Master Programming with AlgoCore\r\n          </h1>\r\n          <h2 className=\"mt-4 text-4xl md:text-5xl font-bold text-blue-600 dark:text-blue-400\">\r\n            Bored of Theory? Let's Code for Real\r\n          </h2>\r\n          <p className=\"mt-6 text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto\">\r\n            Kickstart Your Coding Journey — No Boring Lectures, Just Real Practice!\r\n          </p>\r\n          <div className=\"mt-8 flex flex-col sm:flex-row items-center justify-center gap-4\">\r\n            {user ? (\r\n              <div className=\"flex flex-col items-center gap-2\">\r\n                <div className=\"text-2xl md:text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-purple-600\">\r\n                  Welcome back, {user.displayName || user.name || 'Coder'} 👋\r\n                </div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n                  Here’s a quick snapshot of your learning progress\r\n                </p>\r\n                <div className=\"flex gap-3 mt-1\">\r\n                  <button\r\n                    onClick={() => navigate('/profile')}\r\n                    className=\"bg-blue-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-blue-700 transition duration-200 shadow-sm\"\r\n                  >\r\n                    Profile\r\n                  </button>\r\n                  <button\r\n                    onClick={() => navigate('/courses')}\r\n                    className=\"bg-white text-blue-600 font-semibold py-2 px-4 rounded-md border-2 border-blue-600 hover:bg-blue-50 dark:bg-gray-800 dark:text-blue-400 dark:border-blue-400 dark:hover:bg-gray-700 transition duration-200\"\r\n                  >\r\n                    Browse Courses\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <button\r\n                onClick={handleGoogleSignIn}\r\n                className=\"flex items-center justify-center gap-3 bg-blue-600 text-white font-semibold pl-2 pr-4 py-2 rounded-lg hover:bg-blue-700 transition duration-300 shadow-md w-full sm:w-auto\"\r\n              >\r\n                <div className=\"bg-white p-1 rounded-full\">\r\n                  <FcGoogle size={24} />\r\n                </div>\r\n                <span>Sign in with Google</span>\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {user && (\r\n          <section className=\"w-full max-w-6xl mx-auto py-10 px-4 sm:px-6 lg:px-8\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-2xl font-bold text-gray-800 dark:text-white\">Your Course Progress</h3>\r\n              {!progressLoading && myCourses.length > 0 && (\r\n                <button\r\n                  onClick={() => navigate('/courses')}\r\n                  className=\"text-sm font-medium text-blue-600 dark:text-blue-400 hover:underline\"\r\n                >\r\n                  View all courses\r\n                </button>\r\n              )}\r\n            </div>\r\n            {progressLoading ? (\r\n              <div className=\"text-gray-600 dark:text-gray-300\">Loading your progress...</div>\r\n            ) : myCourses.length === 0 ? (\r\n              <div className=\"text-gray-600 dark:text-gray-300\">No courses yet. Explore and start learning!</div>\r\n            ) : (\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                {myCourses\r\n                  .slice() // copy\r\n                  .sort((a, b) => b.percent - a.percent)\r\n                  .slice(0, 4)\r\n                  .map(c => (\r\n                    <div key={c.id} className=\"bg-white/90 dark:bg-gray-800/90 rounded-xl p-4 border border-gray-200 dark:border-gray-700 shadow-sm hover:shadow-md transition-shadow\">\r\n                      <div className=\"flex items-start justify-between mb-2\">\r\n                        <h4 className=\"font-semibold text-gray-900 dark:text-white leading-tight pr-2 truncate\">{c.title}</h4>\r\n                        <span className=\"text-xs px-2 py-1 rounded-full bg-blue-100 text-blue-700 dark:bg-blue-900/40 dark:text-blue-300\">{c.percent}%</span>\r\n                      </div>\r\n                      <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mb-3\">\r\n                        <div className=\"bg-gradient-to-r from-blue-500 to-purple-600 h-2 rounded-full\" style={{ width: `${c.percent}%` }}></div>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => navigate(`/course/${c.id}`)}\r\n                        className=\"w-full text-sm font-medium bg-blue-600 text-white py-2 rounded-md hover:bg-blue-700 transition-colors\"\r\n                      >\r\n                        Resume\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n\r\n              </div>\r\n\r\n            )}\r\n\r\n\r\n          </section>\r\n        )}\r\n\r\n        {/* Languages Section - Only show when user is not logged in */}\r\n        {!user && (\r\n\r\n          <section className=\"w-full max-w-5xl mx-auto py-16 px-4 sm:px-6 lg:px-8\">\r\n            <h2 className=\"text-3xl font-bold text-center text-gray-800 dark:text-white mb-12\">\r\n              Learn in Your Favorite Language\r\n            </h2>\r\n            <div className=\"flex flex-wrap justify-center gap-6\">\r\n              {languages.map((language, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"flex flex-col items-center justify-center bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm rounded-xl p-6 w-32 h-32 border border-gray-200/50 dark:border-gray-700/50 shadow-lg hover:shadow-xl transition-shadow duration-300\"\r\n                >\r\n                  <span className=\"text-4xl mb-2\">{language.icon}</span>\r\n                  <span className=\"text-lg font-medium text-gray-900 dark:text-white\">{language.name}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </section>\r\n        )}\r\n      </main>\r\n\r\n      <div className=\"relative z-10 w-full\">\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;"],"names":["Footer","_jsx","className","children","_jsxs","Link","to","navigate","useNavigate","googleSignIn","loading","user","useAuth","myCourses","setMyCourses","useState","progressLoading","setProgressLoading","useEffect","async","dbRef","ref","database","coursesSnap","get","child","exists","coursesList","val","Array","isArray","enriched","Promise","all","map","lessonsSnap","progressSnap","concat","c","id","uid","lessons","percent","calculateCourseProgress","userProgress","total","completed","Object","keys","forEach","topicKey","topic","description","questions","length","tProg","q","Math","round","title","e","console","error","fetchProgress","LoadingPage","displayName","name","onClick","FcGoogle","size","slice","sort","a","b","style","width","icon","language","index"],"sourceRoot":""}