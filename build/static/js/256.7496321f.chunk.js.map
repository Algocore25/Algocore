{"version":3,"file":"static/js/256.7496321f.chunk.js","mappings":"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","sources":["pages/ContactPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FaGithub, FaLinkedin, FaEnvelope } from 'react-icons/fa';\r\nimport { ref, onValue } from 'firebase/database';\r\nimport { database } from '../firebase';\r\n\r\n// Default avatar component\r\nconst DefaultAvatar = () => (\r\n  <svg viewBox=\"0 0 200 200\" className=\"w-32 h-32 mx-auto\">\r\n    <circle cx=\"100\" cy=\"100\" r=\"80\" fill=\"#4F46E5\" />\r\n    <circle cx=\"100\" cy=\"85\" r=\"40\" fill=\"#F3F4F6\" />\r\n    <circle cx=\"82\" cy=\"80\" r=\"5\" fill=\"#374151\" />\r\n    <circle cx=\"118\" cy=\"80\" r=\"5\" fill=\"#374151\" />\r\n    <path d=\"M80 120 Q100 140 120 120\" stroke=\"#374151\" strokeWidth=\"4\" fill=\"none\" />\r\n  </svg>\r\n);\r\n\r\n// Component to render SVG from string\r\nconst SvgRenderer = ({ svgString, className = '' }) => {\r\n  return (\r\n    <div \r\n      className={className}\r\n      dangerouslySetInnerHTML={{ __html: svgString }}\r\n    />\r\n  );\r\n};\r\n\r\nconst ContactCard = ({ member }) => (\r\n  <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden transition-transform duration-300 hover:scale-105\">\r\n    <div className=\"p-2\">\r\n      <div className=\"flex justify-center -mt-16\">\r\n        <div className=\"bg-white dark:bg-gray-700 p-1 rounded-full\">\r\n          {member.avatar}\r\n        </div>\r\n      </div>\r\n      <div className=\"px-6 py-4 text-center\">\r\n        <h3 className=\"text-2xl font-semibold text-gray-800 dark:text-white\">{member.name}</h3>\r\n        <p className=\"text-indigo-600 dark:text-indigo-400 text-sm\">{member.role}</p>\r\n        <div className=\"flex justify-center space-x-4 mt-4\">\r\n          <a \r\n            href={member.linkedin} \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n            className=\"text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 transition-colors\"\r\n            aria-label=\"LinkedIn\"\r\n          >\r\n            <FaLinkedin size={24} />\r\n          </a>\r\n          <a \r\n            href={member.github} \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n            className=\"text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white transition-colors\"\r\n            aria-label=\"GitHub\"\r\n          >\r\n            <FaGithub size={24} />\r\n          </a>\r\n          <a \r\n            href={`mailto:${member.email}`}\r\n            className=\"text-red-500 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300 transition-colors\"\r\n            aria-label=\"Email\"\r\n          >\r\n            <FaEnvelope size={24} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst ContactPage = () => {\r\n  const [teamMembers, setTeamMembers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Background elements\r\n  const backgroundElements = [\r\n    { top: '20%', left: '10%', size: 'w-20 h-20', color: 'bg-blue-200' },\r\n    { top: '40%', right: '10%', size: 'w-16 h-16', color: 'bg-purple-200' },\r\n    { bottom: '40%', left: '15%', size: 'w-12 h-12', color: 'bg-green-200' },\r\n    { bottom: '60%', right: '20%', size: 'w-24 h-24', color: 'bg-yellow-200' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const teamRef = ref(database, 'teamMembers');\r\n    \r\n    const processTeamMember = (member) => {\r\n      // If avatar is an object with an svg property, use it\r\n      if (member.avatar && typeof member.avatar === 'object' && member.avatar.svg) {\r\n        return {\r\n          ...member,\r\n          avatar: <SvgRenderer \r\n            svgString={member.avatar.svg} \r\n            className=\"w-32 h-32 mx-auto\"\r\n          />\r\n        };\r\n      }\r\n      // If avatar is a string, use it as SVG string\r\n      if (member.avatar && typeof member.avatar === 'string') {\r\n        return {\r\n          ...member,\r\n          avatar: <SvgRenderer \r\n            svgString={member.avatar} \r\n            className=\"w-32 h-32 mx-auto\"\r\n          />\r\n        };\r\n      }\r\n      // Default avatar if none provided\r\n      return {\r\n        ...member,\r\n        avatar: <DefaultAvatar />\r\n      };\r\n    };\r\n    \r\n    const unsubscribe = onValue(teamRef, (snapshot) => {\r\n      try {\r\n        const data = snapshot.val();\r\n        if (data) {\r\n          // Convert the object of team members to an array and process each member\r\n          const membersArray = Object.entries(data).map(([id, member]) => ({\r\n            id,\r\n            ...processTeamMember(member)\r\n          }));\r\n          setTeamMembers(membersArray);\r\n        } else {\r\n          setTeamMembers([]);\r\n        }\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error('Error fetching team members:', err);\r\n        setError('Failed to load team members. Please try again later.');\r\n        setTeamMembers([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }, (error) => {\r\n      console.error('Firebase error:', error);\r\n      setError('Error connecting to the server. Please check your connection.');\r\n      setLoading(false);\r\n    });\r\n\r\n    // Cleanup subscription on unmount\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600 dark:text-gray-300\">Loading team members...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\r\n        <div className=\"text-center p-6 max-w-md bg-white dark:bg-gray-800 rounded-lg shadow-lg\">\r\n          <div className=\"text-red-500 text-4xl mb-4\">⚠️</div>\r\n          <h2 className=\"text-xl font-semibold text-gray-800 dark:text-white mb-2\">Oops! Something went wrong</h2>\r\n          <p className=\"text-gray-600 dark:text-gray-300 mb-6\">{error}</p>\r\n          <button \r\n            onClick={() => window.location.reload()} \r\n            className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\r\n          >\r\n            Try Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 py-12 px-4 sm:px-6 lg:px-8 relative overflow-hidden\">\r\n      {/* Grid Pattern Background */}\r\n      {/* <div className=\"absolute top-0 left-0 w-full h-full bg-grid-pattern dark:bg-dark-grid-pattern bg-20\"></div> */}\r\n      \r\n      {/* Animated Background Elements */}\r\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\r\n        {backgroundElements.map((element, index) => (\r\n          <div \r\n            key={index}\r\n            className={`absolute ${element.top} ${element.left || ''} ${element.right || ''} \r\n                       ${element.size} ${element.color} rounded-full opacity-20 animate-pulse`}\r\n            style={{\r\n              animationDelay: `${index * 2}s`,\r\n              animationDuration: '8s'\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <div className=\"text-center mb-12\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\">\r\n            Meet Our Team\r\n          </h1>\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto\">\r\n            We're a passionate team dedicated to making learning algorithms fun and accessible.\r\n          </p>\r\n        </div>\r\n        \r\n        {teamMembers.length > 0 ? (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n            {teamMembers.map((member) => (\r\n              <ContactCard key={member.id} member={{\r\n                ...member,\r\n                // Use default avatar if none provided\r\n                avatar: member.avatar || <DefaultAvatar />\r\n              }} />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center py-12 bg-white dark:bg-gray-800 rounded-xl shadow\">\r\n            <p className=\"text-gray-500 dark:text-gray-400\">No team members found.</p>\r\n          </div>\r\n        )}\r\n\r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n"],"names":["DefaultAvatar","_jsxs","viewBox","className","children","_jsx","cx","cy","r","fill","d","stroke","strokeWidth","SvgRenderer","_ref","svgString","dangerouslySetInnerHTML","__html","ContactCard","_ref2","member","avatar","name","role","href","linkedin","target","rel","FaLinkedin","size","github","FaGithub","concat","email","FaEnvelope","ContactPage","teamMembers","setTeamMembers","useState","loading","setLoading","error","setError","useEffect","teamRef","ref","database","unsubscribe","onValue","snapshot","data","val","membersArray","Object","entries","map","_ref3","id","_objectSpread","svg","processTeamMember","err","console","onClick","window","location","reload","top","left","color","right","bottom","element","index","style","animationDelay","animationDuration","length"],"sourceRoot":""}